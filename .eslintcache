[{"C:\\Users\\Tushar\\Desktop\\Bridgelabz\\React JS codes\\fundoo-notes\\src\\index.js":"1","C:\\Users\\Tushar\\Desktop\\Bridgelabz\\React JS codes\\fundoo-notes\\src\\App.js":"2","C:\\Users\\Tushar\\Desktop\\Bridgelabz\\React JS codes\\fundoo-notes\\src\\reportWebVitals.js":"3","C:\\Users\\Tushar\\Desktop\\Bridgelabz\\React JS codes\\fundoo-notes\\src\\pages\\SignUp\\signup.jsx":"4","C:\\Users\\Tushar\\Desktop\\Bridgelabz\\React JS codes\\fundoo-notes\\src\\pages\\Forgot-Password\\forgotPassword.jsx":"5","C:\\Users\\Tushar\\Desktop\\Bridgelabz\\React JS codes\\fundoo-notes\\src\\pages\\SignIn\\SignIn.jsx":"6","C:\\Users\\Tushar\\Desktop\\Bridgelabz\\React JS codes\\fundoo-notes\\src\\pages\\Reset-Password\\ResetPassword.jsx":"7","C:\\Users\\Tushar\\Desktop\\Bridgelabz\\React JS codes\\fundoo-notes\\src\\components\\DashBoard\\DashBoard.jsx":"8","C:\\Users\\Tushar\\Desktop\\Bridgelabz\\React JS codes\\fundoo-notes\\src\\Services\\userServices.js":"9","C:\\Users\\Tushar\\Desktop\\Bridgelabz\\React JS codes\\fundoo-notes\\src\\components\\addNote\\addNote.jsx":"10","C:\\Users\\Tushar\\Desktop\\Bridgelabz\\React JS codes\\fundoo-notes\\src\\components\\AppBar\\AppBar.jsx":"11","C:\\Users\\Tushar\\Desktop\\Bridgelabz\\React JS codes\\fundoo-notes\\src\\components\\DisplayNotes\\DisplayNote.jsx":"12","C:\\Users\\Tushar\\Desktop\\Bridgelabz\\React JS codes\\fundoo-notes\\src\\components\\DisplayIcons\\DisplayIcons.jsx":"13","C:\\Users\\Tushar\\Desktop\\Bridgelabz\\React JS codes\\fundoo-notes\\src\\components\\SideBar\\SideBar.jsx":"14","C:\\Users\\Tushar\\Desktop\\Bridgelabz\\React JS codes\\fundoo-notes\\src\\components\\Notes\\notes.jsx":"15","C:\\Users\\Tushar\\Desktop\\Bridgelabz\\React JS codes\\fundoo-notes\\src\\components\\TrashNotes\\trashnote.jsx":"16"},{"size":453,"mtime":1610622772000,"results":"17","hashOfConfig":"18"},{"size":947,"mtime":1615345924277,"results":"19","hashOfConfig":"18"},{"size":362,"mtime":1610590550000,"results":"20","hashOfConfig":"18"},{"size":14290,"mtime":1615291721585,"results":"21","hashOfConfig":"18"},{"size":4741,"mtime":1615343848064,"results":"22","hashOfConfig":"18"},{"size":6151,"mtime":1615434782300,"results":"23","hashOfConfig":"18"},{"size":5641,"mtime":1615350335234,"results":"24","hashOfConfig":"18"},{"size":446,"mtime":1615448415198,"results":"25","hashOfConfig":"18"},{"size":3311,"mtime":1615534171172,"results":"26","hashOfConfig":"18"},{"size":4396,"mtime":1615463236682,"results":"27","hashOfConfig":"18"},{"size":3579,"mtime":1611193380000,"results":"28","hashOfConfig":"18"},{"size":2394,"mtime":1615608789191,"results":"29","hashOfConfig":"18"},{"size":3654,"mtime":1615609060421,"results":"30","hashOfConfig":"18"},{"size":4816,"mtime":1615550404784,"results":"31","hashOfConfig":"18"},{"size":811,"mtime":1615452875437,"results":"32","hashOfConfig":"18"},{"size":2772,"mtime":1615539790792,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"11eg0zf",{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"36"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"36"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"36"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"36"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"36"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"36"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"36"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"36"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"36"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"36"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"36"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"79"},"C:\\Users\\Tushar\\Desktop\\Bridgelabz\\React JS codes\\fundoo-notes\\src\\index.js",[],["80","81"],"C:\\Users\\Tushar\\Desktop\\Bridgelabz\\React JS codes\\fundoo-notes\\src\\App.js",["82"],"import { BrowserRouter as Router ,Switch, Route } from 'react-router-dom';\n import Signin from './pages/SignIn/SignIn';\n import Signup from './pages/SignUp/signup'\n import forgotPassword from './pages/Forgot-Password/forgotPassword'\n import resetPassword from './pages/Reset-Password/ResetPassword'\n import DashBoard from './components/DashBoard/DashBoard'\nimport dashboard from './components/DashBoard/DashBoard';\n\n\n\n\nfunction App() {\n\n  return (\n    \n    <div className=\"App\">\n     \n       <Router>\n        <Switch>\n          <Route path=\"/signin\" exact component={Signin} />\n          <Route path=\"/signup\"  component={Signup} /> \n          <Route path=\"/forgotPassword\"  component={forgotPassword} /> \n          <Route path=\"/ResetPassword/:token\"  component={resetPassword} />\n          <Route path=\"/dashboard\"  component={ dashboard } />\n          \n\n        </Switch>\n      </Router>   \n    </div>\n    \n     \n  \n  );\n}\n\nexport default App;\n","C:\\Users\\Tushar\\Desktop\\Bridgelabz\\React JS codes\\fundoo-notes\\src\\reportWebVitals.js",[],"C:\\Users\\Tushar\\Desktop\\Bridgelabz\\React JS codes\\fundoo-notes\\src\\pages\\SignUp\\signup.jsx",["83","84","85","86"],"import React, { Component } from \"react\";\nimport \"./signup.css\"\nimport { Card, Container, CssBaseline, Typography } from '@material-ui/core';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Box from '@material-ui/core/Box';\nimport { registration } from \"../../Services/userServices\"\n\n\n\nclass Signup extends Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n          firstname: \"\",\n          lastname: \"\",\n          email: \"\",\n          password: \"\",\n          Rpassword: \"\",\n          errorValid: {\n            firstname: false,\n            lastname: false,\n            email: false,\n            password: false,\n            Rpassword: false,\n            showPassword : false,\n          },\n          enable: true,\n          service: \"advance\",\n          errors: {\n            firstname: \"\",\n            lastname: \"\",\n            email: \"\",\n            password: \"\",\n            Rpassword: \"\",\n          },\n        };\n      }\n\n\n    \n      handleFirstNameInput = (event) => {\n        event.preventDefault();\n        this.setState({\n          firstname: event.target.value,\n        });\n        let errors = this.state.errors;\n        let validate = false;\n        const regexvalidatefirstName = new RegExp(/^[A-Z]{1}[a-z]{3,}$/);\n        if (!regexvalidatefirstName.test(this.state.firstname)) {\n          errors.firstname = \"First Name is incorrect\";\n          validate = true;\n        } else {\n          errors.firstname = \"\";\n        }\n        this.setState({\n          errorValid: { firstname: validate },\n          errors: { firstname: errors.firstName },\n        });\n      };\n      \n      handleLastNameInput = (event) => {\n        event.preventDefault();\n        this.setState({\n          lastname: event.target.value,\n        });\n        let errors = this.state.errors;\n        let validate = false;\n        \n        const regexvalidatelastName = new RegExp(/^[A-Z]{1}[a-z]{3,}$/);\n        if (!regexvalidatelastName.test(event.target.value)) {\n          errors.lastname = \"Last Name is incorrect\";\n          validate = true;\n        } else {\n          errors.lastname = \"\";\n        }\n        this.setState({\n          errorValid: { lastname: validate },\n          errors: { lastname: errors.lastname },\n        });\n      };\n    \n       \n\n      handleEmailInput = (event) => {\n        event.preventDefault();\n        this.setState({\n          email: event.target.value,\n        });\n        let errors = this.state.errors;\n        let validate = false;\n        const regexValidateEmail = new RegExp(/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$$/);\n        if (!regexValidateEmail.test(event.target.value)) {\n          errors.email = \"Email is not according to the syntx\";\n          validate = true;\n        } else {\n          errors.email = \"\";\n        }\n        this.setState({\n          errorValid: { email: validate },\n          errors: { email: errors.email },\n        });\n      };\n\n      handlePasswordInput = (event) => {\n        event.preventDefault();\n        this.setState({\n          hidePassword: true,\n          password: event.target.value,\n          icEye: 'visibility-off',\n        });\n        let errors = this.state.errors;\n        let validate = false;\n        const regexvalidatePassword = new RegExp(/^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[a-zA-Z]).{8,}$/);\n        if (!regexvalidatePassword.test(event.target.value)) {\n          errors.password =\n            \"Password is not valid\";\n          validate = true;\n        } else {\n          errors.password = \"\";\n        }\n        this.setState({\n          errorValid: { password: validate },\n          errors: { password: errors.password },\n        });\n      };\n      \n      \n      handleReapetPasswordInput = (event) => {\n        event.preventDefault();\n        this.setState({\n          hidePassword: true,\n          Rpassword: event.target.value,\n          icEye: 'visibility-off',\n        });\n        let errors = this.state.errors;\n        let validate = false;\n        if (this.state.password !== this.state.Rpassword) {\n    \n          errors.Rpassword =\n            \"\";\n          validate = true;\n    \n        } else if (this.state.password === this.state.Rpassword) {\n          errors.Rpassword = true;\n        }\n        this.setState({\n    \n          errorValid: { Rpassword: validate },\n          errors: { Rpassword: errors.Rpassword },\n        });\n       \n      };\n    \n    handleSubmit =(event) =>{\n      event.preventDefault();\n        if( this.state.firstname === \"\" && this.state.lastname === \"\" && this.state.email === \"\" && this.state.password === \"\" ){\n        this.setState({\n                 errorValid: {\n                   email: true,\n                   password: true,\n                   firstName: true,\n                   lastName: true,\n                 },\n                 errors: {\n                   email: \"email field shoul not be empty\",\n                   password: \"password field should not be empty\",\n                   firstName: \"firstname field should not be empty\",\n                   lastName: \"lastname field should not be empty\",\n                 },\n               });\n        }\n\n        if (this.state.email !== \"\" && \n          this.state.password !== \"\" && this.state.lastName !== \"\" \n          && this.state.firstName !== \"\") {\n           \n            let userData = {\n              firstname: this.state.firstname,\n              lastname: this.state.lastname,\n              email: this.state.email,\n              password: this.state.password,\n            }\n\n            console.log('userData : ',userData)\n            registration (userData).then((data)=>{\n              console.log(data);\n              \n            })\n            .catch ((error)=>{\n              console.log(error)\n            })\n\n        }\n\n\n       \n     }\n      \n      render() {\n        return (\n          <div className=\"inline-wrapper\">\n            <Card id='card'>\n              <Container component=\"main\" maxWidth=\"xs\">\n                <CssBaseline />\n                <div className=\"inline-paper\">\n                <br>\n                </br>  \n            <Typography className=\"app_name\" variant=\"h5\" color=\"textSecondary\">\n                  <span style={{ color: \"#0606f8\" }}>F</span>\n                  <span style={{ color: \"#d10303\" }}>u</span>\n                  <span style={{ color: \"#f0b000\" }}>n</span>\n                  <span style={{ color: \"#0606f8\" }}>d</span>\n                  <span style={{ color: \"green\" }}>o</span>\n                  <span style={{ color: \"#d10303\" }}>o</span>\n            </Typography>\n              <br>\n              </br>\n            <Typography component=\"h1\" variant=\"h5\" className=\"header\">\n                  <div className=\"header-content\">\n                    <font color=\"blue\">Sign up</font>\n                  </div>\n            </Typography>\n              <br>\n              </br>\n                  <form className=\"form\">\n                    <div className=\"address\">\n                      <Grid container spacing={2}>\n    \n                        <Grid item xs={12} sm={6} style={{ marginTop: 3, marginBottom: 3 , marginRight:-20 , marginLeft: -5}}>\n                          <div  className=\"name\">\n                            <div className=\"first-Name\">\n                            <TextField\n                             height=\"100\"\n                              autoComplete=\"fname\"\n                              name=\"firstname\"\n                              variant=\"outlined\"\n                              required\n                              fullWidth\n                              id=\"firstname\"\n                              label=\"First Name\"\n                              \n                              value={this.state.firstname}\n                              error={this.state.errorValid.firstname}\n                              onChange={this.handleFirstNameInput}\n                              helperText={this.state.errors[\"firstname\"]}\n                             \n                            />\n                            </div>\n                          </div>\n                        </Grid>\n                        <Grid  item xs={12} sm={6} style={{ marginTop: 2, marginBottom: 3 ,marginLeft:20 , marginRight:-30}}>\n                          <div  className=\"last-name\">\n                          <div  className=\"first-Name\">\n                            <TextField\n                             height=\"8\"\n                              variant=\"outlined\"\n                              required\n                              fullWidth\n                              id=\"lastname\"\n                              label=\"Last Name\"\n                              name=\"lastname\"\n                              \n                              value={this.state.lastname}\n                              error={this.state.errorValid.lastname}\n                              onChange={this.handleLastNameInput}\n                              helperText={this.state.errors[\"lastname\"]}\n                             \n                            />\n                            </div>\n                          </div>\n                        </Grid>\n                        <Grid item xs={12}  >\n                          <Grid style={{ marginTop: 25, marginBottom: 3 ,marginLeft:-3}} >\n                            <div className=\"email-address\">\n                              <div className=\"first-Name\" >\n                              <TextField\n                               height=\"8\"\n                                variant=\"outlined\"\n                                required\n                                fullWidth\n                                id=\"email\"\n                                label=\"Email Address\"\n                                name=\"email\"\n                                autoComplete=\"email\"\n                                value={this.state.email}\n                                error={this.state.errorValid.email}\n                                onChange={this.handleEmailInput}\n                                helperText={this.state.errors[\"email\"]}\n                               \n                              />\n                              </div>\n                            </div>\n                          </Grid>\n                        </Grid>\n    \n    \n                        <Grid item xs={12} >\n                          <Grid  style={{ marginTop: 25, marginBottom: 3 ,marginLeft:-3 ,height:5}}>\n                            <div  className=\"passwrord-Id\">\n                              <div className=\"first-Name\">\n                              <TextField\n                                height=\"8\"\n                                variant=\"outlined\"\n                                required\n                                fullWidth\n                                id=\"password\"\n                                label=\"password\"\n                                name=\"password\"\n                                autoComplete=\"current-password\"\n                                value={this.state.password}\n                                error={this.state.errorValid.password}\n                                onChange={this.handlePasswordInput}\n                                helperText={this.state.errors[\"password\"]}\n                                type={this.state.showPassword ? 'text' : 'password'}\n                                \n                               />\n \n                              </div>\n    \n                            </div>\n                          </Grid>\n                        </Grid>\n    \n                        <Grid item xs={12}  >\n                          <Grid style={{ marginTop: 55, marginBottom: 3 , marginLeft:-3 }}>\n                          <div className=\"passwrord-Id\">\n                              <div  className=\"first-Name\">\n                              <TextField\n                                height=\"8\"\n                                variant=\"outlined\"\n                                required\n                                fullWidth\n                                name=\"rpassword\"\n                                label=\"confirm Password\"\n                                type=\"rpassword\"\n                                id=\"rpassword\"\n                                autoComplete=\"current-password\"\n                                error={this.state.errorValid.Rpassword}\n                                onChange={this.handleReapetPasswordInput}\n                                helperText={this.state.errors[\"Rpassword\"]}\n                                type=\"text\"\n                                type={this.state.showPassword ? 'text' : 'password'}\n                            \n                              />\n                              </div>\n                              \n                            </div>\n                          </Grid>\n                        </Grid>\n    \n                      </Grid >\n                       \n                      <div className=\"createAccount\">\n                      <Grid  style={{ marginTop: 45, marginLeft: -1  }}>\n                        <div className=\"Button\">\n                        <Button\n                          type=\"submit\"\n                          fullWidth\n                          variant=\"contained\"\n                          color=\"secondary\"\n                          onClick={this.handleSubmit}\n                        >\n                          Sign Up\n                    </Button>\n                    </div>\n                    </Grid>\n                    <br>\n                    </br>\n                    <Grid container justify=\"flex-end\">\n                        <div className=\"forgot-password \">\n                          <p align=\"left\">\n                            Already registered?<a href=\"http://localhost:3000/signin/\">  Sign in</a>\n                          </p>\n                        </div>\n                    </Grid>    \n    \n                      </div>\n                    </div>\n                  </form>\n                </div>\n                <Box mt={2}>\n    \n                </Box>\n              </Container>\n            </Card >\n          </div>\n        );\n      }\n}\n\n\n\nexport default Signup;","C:\\Users\\Tushar\\Desktop\\Bridgelabz\\React JS codes\\fundoo-notes\\src\\pages\\Forgot-Password\\forgotPassword.jsx",["87","88","89","90","91"],"import React, { Component } from \"react\"\nimport \"./forgotPassword.css\"\nimport { Card } from '@material-ui/core';\nimport Container from '@material-ui/core/Container';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Link from '@material-ui/core/Link';\nimport { forgotPass } from \"../../Services/userServices\"\n\nclass forgotPassword extends Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n          email: \"\",\n          forgetMsg: \"\",\n\n          errorValid: {\n            email: false,\n          },\n          errors: {\n            email: \"\",\n          },\n        };\n      }\n\n      change = (e) => {\n        this.setState({\n          [e.target.name]: e.target.value,\n        })\n      }\n\n      handleEmailInput = (event) => {\n        event.preventDefault();\n        this.setState({\n          email: event.target.value,\n        });\n        let errors = this.state.errors;\n        let validate = false;\n        const regexValidateEmail = new RegExp(/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$$/);\n        if (!regexValidateEmail.test(this.state.email)) {\n          errors.email = \"Email is not valid\";\n          validate = true;\n        } else {\n          errors.email = \"\";\n        }\n        this.setState({\n          errorValid: { email: validate },\n          errors: { email: errors.email },\n        });\n      };\n\n      \n      handleSubmit = (event) =>{\n        event.preventDefault();\n        let errs = {};\n        let formIsValid = true;\n        this.setState({\n          email: \"\",\n        })\n        formIsValid = \"Msg has been send\"\n        const errors = this.state.errors;\n        if( errors.email || this.state.email == \"\" ){\n          this.setState({\n            forgetMsg: true,\n            forgetMsg: \"Enter valid Email ID\"\n          });\n          formIsValid = false;\n          errs[\"email\"] = \"Email ID is required\";\n        }\n\n        let forgotPassData = {\n         \"email\" : this.state.email,\n        }\n        console.log('forgotPassData : ',forgotPassData)\n        forgotPass(forgotPassData).then((data)=>{\n          console.log(data);\n          alert('Reset link has been send to your Email account kindly check')\n        })\n        .catch ((error)=>{\n          console.log(error)\n        })\n          \n        \n      }\n\nrender(){\n    return(\n        <div className=\"wrapper-tool\">\n            <Card id='form'>\n            <Container component=\"main\" maxWidth=\"xs\">\n            <CssBaseline />\n            <div className=\"paper\">\n                <br>\n                </br>\n                <br>\n                </br>\n            <Typography component=\"h1\" variant=\"h5\" className=\"fundooShift\">\n              <span style={{ color: \"#0606f8\"}}>F</span>\n              <span style={{ color: \"#d10303\" }}>u</span>\n              <span style={{ color: \"#f0b000\" }}>n</span>\n              <span style={{ color: \"#0606f8\" }}>d</span>\n              <span style={{ color: \"green\" }}>o</span>\n              <span style={{ color: \"#d10303\" }}>o</span>\n              </Typography>\n              <Typography component=\"h1\" variant=\"h5\" className=\"head\">\n              <span>Find your email</span>\n              </Typography>\n              <Typography component=\"h1\" variant=\"h5\" className=\"head\">\n              <span><h6>Enter your phone number or recovery email</h6></span>\n              </Typography>\n              <form className=\"form\">\n              <Grid>\n              <Grid>\n                    <TextField\n                      variant=\"outlined\"\n                      required\n                      fullWidth\n                      id=\"emailOrNumber\"\n                      label=\"Enter phone number or email :\"\n                      name=\"email\"\n                      autoComplete=\"email\"\n                      value={this.state.email}\n                      onChange={this.handleEmailInput}\n                      \n                    />\n                  </Grid>\n                  \n              </Grid>\n              <br>\n              </br>\n              <Grid>\n                  <Grid>\n                  <Link href=\"\" color=\"textPrimary\" >\n                  <Button \n                     variant=\"contained\" \n                     color=\"primary\"\n                     onClick={this.handleSubmit}>\n                      Reset password\n                  </Button>\n                  </Link>\n                  </Grid>\n                </Grid>\n              </form>\n\n            </div>\n            </Container>\n            </Card>\n        </div>\n    );\n}\n\n}\nexport default forgotPassword;","C:\\Users\\Tushar\\Desktop\\Bridgelabz\\React JS codes\\fundoo-notes\\src\\pages\\SignIn\\SignIn.jsx",["92","93","94","95","96"],"import React, { Component } from 'react';\nimport \"./signin.css\";\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport { Card } from '@material-ui/core';\nimport { login } from \"../../Services/userServices\"\n\nclass signin extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: \"\",\n      password: \"\",\n      emailError: \"\",\n      emailFlag: false,\n      passwordError: \"\",\n      passwordFlag: false,\n      \n    };\n  }\n\n  change = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  validate = () => {\n    let isError = false;\n    const errors = {\n      emailError: \"\",\n      emailFlag: false,\n      passwordError: \"\",\n      passwordFlag: false,\n    };\n\n    if (this.state.email.length == 0) {\n      errors.emailFlag = true;\n      isError = true;\n      errors.emailError = \"Enter your Email \";\n    }\n    if (!/[a-zA-Z0-9._]+[@]{1}[a-zA-Z120-9]*[.]{1}[a-zA-Z]*$/.test(this.state.email)) {\n      errors.emailFlag = true;\n      isError = true;\n      errors.emailError = \"Please Enter Correct Email\";\n    }\n    if (this.state.password.length == 0) {\n      errors.passwordFlag = true;\n      isError = true;\n      errors.passwordError = \"Enter Password\";\n    }\n\n    this.setState({\n      ...errors,\n    });\n\n    return isError;\n  };\n  \n  \n\n \n  onSubmit = (event) => {\n    event.preventDefault();\n    const err = this.validate();\n    if (!err) {\n      this.setState({\n        email: \"\",\n        emailFlag: false,\n        emailError: \"\",\n        password: \"\",\n        passwordFlag: false,\n        passwordError: \"\",\n      });\n      \n      let loginData = {\n        \n        email: this.state.email,\n        password: this.state.password,\n        \n      };\n\n      console.log('loginData : ',loginData)\n      login (loginData).then((data)=>{\n        console.log(data);\n        localStorage.setItem('token',data.data.token)\n        alert('Login Successfull')\n      })\n      .catch ((error)=>{\n        console.log(error)\n        alert('Login failed')\n      })\n     \n    }\n  };\n\n\n  render() {\n    return (\n      <div className=\"wrapper-tool\">\n        <Card id='form'>\n          <Container component=\"main\" maxWidth=\"xs\">\n            <CssBaseline />\n            <div className=\"paper\">\n              <br>\n              </br>\n              <Typography component=\"h1\" variant=\"h5\" className=\"fundooShift\">\n              <span style={{ color: \"#0606f8\"}}>F</span>\n              <span style={{ color: \"#d10303\" }}>u</span>\n              <span style={{ color: \"#f0b000\" }}>n</span>\n              <span style={{ color: \"#0606f8\" }}>d</span>\n              <span style={{ color: \"green\" }}>o</span>\n              <span style={{ color: \"#d10303\" }}>o</span>\n              </Typography>\n              <Typography component=\"h1\" variant=\"h5\" className=\"head\">\n              <span style={{ color: \"#0606f8\"}}>Sign In</span>\n              </Typography>\n              <form className=\"form\">\n                <Grid>\n\n                  <Grid>\n                    <TextField\n                      variant=\"outlined\"\n                      required\n                      fullWidth\n                      id=\"email\"\n                      label=\"Enter Email Address :\"\n                      name=\"email\"\n                      autoComplete=\"email\"\n                      value={this.state.email}\n                      helperText={this.state.emailError}\n                      error={this.state.emailFlag}\n                      onChange={(e) => this.change(e)}\n                     \n                    />\n                  </Grid>\n                  <br>\n                  </br>\n                  <Grid>\n                    <TextField\n                      variant=\"outlined\"\n                      required\n                      fullWidth\n                      id=\"password\"\n                      label=\"Enter Password :\"\n                      name=\"password\"\n                      autoComplete=\"current-password\"\n                      value={this.state.password}\n                      onChange={(e) => this.change(e)}\n                      error={this.state.passwordFlag}\n                      helperText={this.state.passwordError}\n                      />\n                  </Grid>\n                </Grid >\n                <br>\n                </br>\n                <Grid>\n                  <Grid>\n                    <Button\n                      type=\"submit\"\n                      variant=\"contained\"\n                      color=\"secondary\"\n                      background-color=\"deepskyblue\"\n                      onClick={this.onSubmit}\n                      >\n                      Sign In\n                    </Button>\n                  </Grid>\n                </Grid>\n                <br>\n                </br>\n                <br>\n                </br>\n                <br>\n                </br>\n                <br>\n                </br>\n                <Grid className=\"extra-tool\"  >\n                  <Grid container justify=\"flex-start\">\n\n                    <Grid item >\n\n                      <Link href=\"http://localhost:3000/signup\" color=\"textPrimary\" >\n                         <font color=\"blue\"><u>Create account</u></font>\n                      </Link>\n\n\n                    </Grid >\n                  </Grid>\n                </Grid>\n                <Grid container justify=\"flex-end\" justify style={{ marginTop: 8, marginBottom: 10 }} className=\"link\" style={{ padding: -1 }}>\n                  <Link href=\"http://localhost:3000/forgotPassword\" color=\"textPrimary\" >\n                      <font color=\"blue\"><u>Forget password?</u></font>\n                  </Link>\n                </Grid>\n                \n                \n              </form>\n            </div>\n          </Container>\n        </Card >\n      </div>\n    );\n  }\n}\n\nexport default signin;","C:\\Users\\Tushar\\Desktop\\Bridgelabz\\React JS codes\\fundoo-notes\\src\\pages\\Reset-Password\\ResetPassword.jsx",["97","98"],"import React, { Component } from \"react\"\nimport \"./ResetPassword.css\"\nimport { Card } from '@material-ui/core';\nimport Container from '@material-ui/core/Container';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport Link from '@material-ui/core/Link';\nimport Button from '@material-ui/core/Button';\nimport { resetPass } from \"../../Services/userServices\"\n\n\nclass ResetPassword extends Component{\n\n\n    constructor(props) {\n        super(props);\n        this.state = {\n        password1: \"\",\n        password1Error: \"\",\n        password1Flag: false,\n        password2: \"\",\n        password2Error: \"\",\n        password2Flag: false,\n        setOpen: false,\n        open: false,\n        token:this.props.match.params.token, \n        \n    };\n}\n\ntoken=this.props.match.params.token;\n\nchange = (e) => {\n    this.setState({\n        [e.target.name]: e.target.value,\n    });\n};\n\nvalidate = () => {\n    let isError = false;\n    const errors = {\n        password1Error: \"\",\n        password1Flag: false,\n        password2Error: \"\",\n        password2Flag: false,\n    };\n\n    if (this.state.password1.length == 0) {\n        errors.password1Flag = true;\n        \n        isError = true;\n        errors.password1Error = \"Enter Password\";\n    }\n\n    if (this.state.password2 != this.state.password1 ) {\n        errors.password2Flag = true;\n        isError = true;\n        errors.password2Error = \"Passwords didn't match.\";\n    }\n\n    this.setState({\n        ...errors,\n    });\n\n    return isError;\n};\n\n\nonSubmit = (event) => {\n    event.preventDefault();\n    const err = this.validate();\n    if (!err) {\n        this.setState({\n            password1: \"\",\n            password1Error: \"\",\n            password1Flag: false,\n            password2: \"\",\n            password2Error: \"\",\n            password2Flag: false,\n            \n        });\n\n        let resetPasswordData = {\n\n            newPass: this.state.password1,\n\n        };\n        console.log(this.state.token)\n        console.log(resetPasswordData)\n        \n        resetPass (resetPasswordData, this.state.token).then((data)=>{\n          console.log(JSON.stringify(data));\n        \n\n        })\n        .catch ((error)=>{\n          console.log(error)\n         \n        })\n    }\n};\n\n    \n\n   \n\n    render(){\n        \n        return(\n            <div className=\"wrapper-tool\">\n                <Card id='form'>\n                <Container component=\"main\" maxWidth=\"xs\">\n                <CssBaseline />\n                <div className=\"paper\">\n                    <br>\n                    </br>\n                    <br>\n                    </br>\n                <Typography component=\"h1\" variant=\"h5\" className=\"fundooShift\">\n                   <span style={{ color: \"#0606f8\"}}>F</span>\n                   <span style={{ color: \"#d10303\" }}>u</span>\n                   <span style={{ color: \"#f0b000\" }}>n</span>\n                   <span style={{ color: \"#0606f8\" }}>d</span>\n                   <span style={{ color: \"green\" }}>o</span>\n                   <span style={{ color: \"#d10303\" }}>o</span>\n              </Typography>\n              <Typography component=\"h1\" variant=\"h5\" className=\"head\">\n              <span><h6>Resetting the password for </h6></span>\n              </Typography>\n              <form className=\"form\">\n              <Grid>\n              <Grid>\n                  <br>\n                  </br>\n                  <br>\n                  </br>\n                    <TextField\n                      variant=\"outlined\"\n                      required\n                      fullWidth\n                      id=\"password1\"\n                      label=\"Enter your new password:\"\n                      name=\"password1\"\n                      autoComplete=\"password1\"\n                      value={this.state.password1}\n                      error={this.state.password1Flag}\n                      onChange={(e)=> this.change(e)}\n                      helperText={this.state.password1Error}\n                    />\n                    \n                  </Grid>\n                  \n              </Grid>\n              <br>\n              </br>\n              <Grid>\n              <Grid>\n                    <TextField\n                      variant=\"outlined\"\n                      required\n                      fullWidth\n                      type=\"text\"\n                      id=\"password2\"\n                      label=\"Enter your confirm password :\"\n                      name=\"password2\"\n                      autoComplete=\"password2\"\n                      value={this.state.password2}\n                      error={this.state.password2Flag}\n                      onChange={(e)=> this.change(e)}\n                      helperText={this.state.password2Error}\n                      \n                     />\n                     \n                </Grid>\n                  \n              </Grid>\n              <br>\n              </br>\n              <Grid>\n                  <Grid>\n                  <Link href=\"\" color=\"textPrimary\" >\n                  <Button \n                  type=\"submit\"\n                  fullWidth\n                  variant=\"contained\" \n                  color=\"primary\"\n                  onClick={this.onSubmit}>\n                      Submit\n                  </Button>\n                  </Link>\n                  </Grid>\n                </Grid>\n              </form>\n                </div>\n                </Container>\n                </Card>\n            </div>\n        )\n    }\n}\n\nexport default ResetPassword;","C:\\Users\\Tushar\\Desktop\\Bridgelabz\\React JS codes\\fundoo-notes\\src\\components\\DashBoard\\DashBoard.jsx",["99","100","101","102"],"import React, { useState, useEffect } from 'react'\nimport \"./DashBoard.css\"\nimport AppBar from '../AppBar/AppBar'\nimport AddNote from \"../addNote/addNote\";\nimport DisplayNote from \"../DisplayNotes/DisplayNote\";\nimport Notes from '../Notes/notes';\n\n\n\nclass dashboard extends React.Component {\n\n   render(){\n    return (\n        <div>\n          <AppBar />\n          <Notes />\n         \n        </div>\n      )\n   }\n   \n}\n\nexport default dashboard;\n\n","C:\\Users\\Tushar\\Desktop\\Bridgelabz\\React JS codes\\fundoo-notes\\src\\Services\\userServices.js",["103","104","105"],"import axios from \"axios\";\nimport React from \"react\";\nimport { Component } from \"react\";\nconst baseUrl = \"http://fundoonotes.incubation.bridgelabz.com/api/user\";\n\n\n\n\nexport function login(data) {\n\n    try {\n        console.log(\"This is the Sign in part\", data);\n        let data3 = axios.post(`http://localhost:5000/api/user/login`, data);\n        return data3;\n    } catch (error) {\n        return error;\n    }\n\n};\n\n\nexport function registration(data) {\n    try {\n        console.log(\"This is the Sign up part\", data);\n        let data1 = axios.post(`http://localhost:5000/api/user/register`, data);\n        return data1;\n    } catch (error) {\n        return error;\n    }\n\n};\n\n\nexport function forgotPass(data) {\n    try {\n        console.log(\"This is forgot password part\", data);\n        let data2 = axios.put(`http://localhost:5000/api/user/forgetPassword`, data);\n        return data2;\n    } catch (error) {\n        return error;\n    }\n};\n\nexport function resetPass(data, token) {\n    try {\n        console.log(\"This is the reset password page\", token);\n        let data4 = axios.put(`http://localhost:5000/api/user/resetPassword`, data, {\n            headers: {\n                token: token,\n            },\n        });\n        return data4;\n    } catch (error) {\n        return error;\n    }\n}\n\n\nexport function addNote(data){\n    console.log('We are inside userServices addNote function',data)\n    let localStorageToken = localStorage.getItem('token')\n    console.log('localStorageToken',localStorageToken)\n    return axios.post(`http://localhost:5000/api/user/addNote`, data, {  headers: { token: localStorage.getItem('token') }})\n}\n\n\nexport function updateNotes(data){\n    console.log('We are inside userServices updateNotes function',data)\n    let data6 = axios.put(`http://localhost:5000/api/user/updateNotes`, data, {  headers: { token: localStorage.getItem('token') }})\n    console.log('data 6 : ',data6)\n    return data6;\n}\n\nexport function getNotes(){\n    console.log('We are inside userServices getNotes function')\n    let localStorageToken = localStorage.getItem('token')\n    console.log('localStorageToken',localStorageToken)\n    let data5 = axios.get(`http://localhost:5000/api/user/getAllNotes`, {  headers: { token: localStorage.getItem('token') }})\n    \n    return data5;\n}\n\nexport function getTrashNotes(){\n    console.log('We are inside userServices getTrashNotes function')\n    let data7 = axios.get(`http://localhost:5000/api/user/getAllTrashNotes`, {  headers: { token: localStorage.getItem('token') }} )\n    console.log('data7 : ',data7)\n    return data7;\n}\n\n\nexport function deleteforever(data){\n    console.log('We are inside userServices deleteforever function',data)\n    return axios.put(`http://localhost:5000/api/user/deleteNote`, data, {  headers: { token: localStorage.getItem('token') }} )\n}\n\n\nexport function deleteNotes(data){\n    console.log('We are inside userServices deleteNotes function',data)\n    return axios.put(`http://localhost:5000/api/user/moveToTrash`, data, {  headers: { token: localStorage.getItem('token') }} )\n}\n\n\nexport function ArchiveNotes(data){\n    console.log('We are inside userServices ArchiveNotes function',data)\n    return axios.put(`http://localhost:5000/api/user/moveToArchive`, data, {  headers: { token: localStorage.getItem('token') }})\n}\n","C:\\Users\\Tushar\\Desktop\\Bridgelabz\\React JS codes\\fundoo-notes\\src\\components\\addNote\\addNote.jsx",["106","107","108","109","110","111","112","113","114","115","116","117","118","119","120","121","122"],"import React, { useState, useContext } from \"react\";\nimport \"./addNote.css\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport InputBase from \"@material-ui/core/InputBase\";\nimport Button from '@material-ui/core/Button';\nimport ImageOutlinedIcon from '@material-ui/icons/ImageOutlined';\nimport CheckBoxOutlinedIcon from '@material-ui/icons/CheckBoxOutlined';\nimport BrushIcon from '@material-ui/icons/Brush';\nimport DisplayIcons from \"../DisplayIcons/DisplayIcons\";\nimport logoicon from \"../../assets/pin note.jpg\";\nimport { addNote, updateNotes } from \"../../Services/userServices\";\n\nvar checkOpen = \"open\";\n\nexport default function AddNote(props) {\n  const [open, setOpen] = React.useState(false);\n  const [showTitle, titleDisplay] = React.useState(props.editOpen);\n  const [edit, setEdit] = React.useState(props.setEdited);\n  const [noteId, setNoteId] = React.useState(props.editId);\n  const [title, settitle] = React.useState(props.editTitle);\n  const [description, setdescription] = React.useState(props.editDisc);\n  const [trash, setTrash] = React.useState(props.trash);\n  const [clr, setClr] = React.useState(\"#fafafa\");\n\n  const handleNote = () => {\n    if (props.setEdited) {\n\n      if (title == undefined && description == undefined) {\n        console.log('Please fill the data')\n        titleDisplay(false);\n        return null;\n      }\n      console.log('We are inside the updateNotes in Addnote')\n      let data = {\n        id: noteId,\n        title: title,\n        description: description,\n        \n      }\n\n      console.log('data : ', data)\n      updateNotes(data).then(data=>{\n        console.log(data)\n        console.log('Note is updated')\n      }).catch(err=>{\n        console.log('err : ',err)\n      })\n      titleDisplay(false);\n    } else {\n\n      let data = {\n        title: title,\n        description: description,\n\n      }\n\n      console.log('data : ', data)\n      addNote(data).then(data=>{\n        \n        console.log('Note added succesfully')\n      }).catch(err=>{\n         console.log('err : ',err)\n      })\n\n      if (checkOpen == \"close\") {\n        setOpen(true);\n        checkOpen = \"open\";\n      } else if (checkOpen == \"open\") {\n        setOpen(false);\n        checkOpen = \"close\";\n      }\n      \n    }\n\n  }\n\n  const handletitle = (Event) => {\n    settitle(Event.target.value);\n  }\n\n  const handledescription = (Event) => {\n    setdescription(Event.target.value);\n  }\n\n  const NotePadOpenClose = () => {\n    if (checkOpen == \"close\") {\n      setOpen(true);\n      checkOpen = \"open\";\n    } else if (checkOpen == \"open\") {\n      setOpen(false);\n      checkOpen = \"close\";\n    }\n    console.log(checkOpen);\n\n  }\n\n\n  return (\n    <div className=\"notesone\">\n      {open ? (\n        <div className=\"contain container1\">\n          <div className=\"note1\" >\n            <div className=\"title pd\">\n              <InputBase\n                placeholder='Title...'\n                name=\"title\"\n                onChange={handletitle}\n                fullWidth\n              />\n              <IconButton>\n                <img className=\"logoIcon\" src={logoicon} size=\"small\" />\n              </IconButton>\n            </div>\n            <div className='note pd'>\n              <InputBase\n                placeholder='Take a note...'\n                value={description}\n                name=\"description\"\n                onChange={handledescription}\n                fullWidth\n              />\n            </div>\n          </div>\n          <br>\n          </br>\n\n          <div className=\"toolbar\">\n\n            <div className=\"toolbar1\">\n              <DisplayIcons trash={trash} />\n            </div>\n            <div className=\"close-button\">\n              <Button size=\"small\" onClick={handleNote}>Close</Button>\n            </div>\n          </div>\n        </div> ) : (\n        <div className=\"contain container\" >\n          <div className=\"note\">\n            <InputBase \n                placeholder='Take a note...'  \n                onClick={NotePadOpenClose} \n                fullWidth \n            />\n          </div>\n          <IconButton>\n            <CheckBoxOutlinedIcon />\n          </IconButton>\n          <IconButton>\n            <BrushIcon />\n          </IconButton>\n          <IconButton>\n            <ImageOutlinedIcon />\n          </IconButton>\n        </div>\n\n\n        )}\n    </div>\n  )\n\n}\n\n","C:\\Users\\Tushar\\Desktop\\Bridgelabz\\React JS codes\\fundoo-notes\\src\\components\\AppBar\\AppBar.jsx",["123","124","125","126"],"import React, { useState } from \"react\";\nimport \"./AppBar.css\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport icon from \"../../assets/keep.icon.png\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport InputBase from \"@material-ui/core/InputBase\";\nimport ReplayOutlinedIcon from \"@material-ui/icons/ReplayOutlined\";\nimport DnsRoundedIcon from \"@material-ui/icons/DnsRounded\";\nimport SettingsSharpIcon from '@material-ui/icons/SettingsOutlined';\nimport AppsRoundedIcon from \"@material-ui/icons/AppsRounded\";\nimport Sidebar from \"../SideBar/SideBar\";\n\nvar checkOpen = \"close\";\n\nexport default function ToolBar(){\n    const [open, setOpen] = React.useState(false);\n\n    const drawerOpenClose = () => {\n        if (checkOpen == \"open\") {\n          setOpen(false);\n          checkOpen = \"close\";\n        } else if (checkOpen == \"close\") {\n          setOpen(true);\n          checkOpen = \"open\";\n        }\n        console.log(checkOpen);\n      }\n\n      return(\n        <div className=\"main\">\n          <AppBar position=\"fixed\" color=\"transparent\" >\n          <Toolbar className=\"topBar\">\n          <div className=\"startOptions\">\n            <div className=\"menuButton\">\n              <IconButton\n                color=\"inherit\"\n                aria-label=\"open drawer\"\n                onClick={drawerOpenClose}\n                edge=\"start\"\n               >\n                <MenuIcon />\n              </IconButton>\n            </div>\n            <div className=\"headerIcon\">\n              <img className=\"headerIcon\" src={icon} />\n            </div> \n            <div className=\"headerTitle\">\n            <span style={{ color: \"#0606f8\"}}>F</span>\n              <span style={{ color: \"#d10303\" }}>u</span>\n              <span style={{ color: \"#f0b000\" }}>n</span>\n              <span style={{ color: \"#0606f8\" }}>d</span>\n              <span style={{ color: \"green\" }}>o</span>\n              <span style={{ color: \"#d10303\" }}>o</span>\n            </div>   \n           </div>\n            <div className=\"search\">\n              <div className=\"searchIcon\">\n                <div className=\"searchIcon\">\n                  <SearchIcon />\n                </div>\n              </div>\n              <InputBase\n              className=\"searchInput\"\n              placeholder=\"Search…\"\n              classes={{\n                root: \"inputRoot\",\n                input: \"inputInput\",\n              }}\n              inputProps={{ \"aria-label\": \"search\" }}\n               />\n           </div>\n           <div className=\"buttonContainer\">\n            <div className=\"button\">\n              <IconButton aria-label=\"open drawer\">\n                <ReplayOutlinedIcon />\n              </IconButton>\n            </div>\n            <div className=\"button\">\n              <IconButton aria-label=\"open drawer\">\n                <DnsRoundedIcon />\n              </IconButton>\n            </div>\n            <div className=\"button\">\n              <IconButton aria-label=\"open drawer\">\n                <SettingsSharpIcon />\n              </IconButton>\n            </div>\n            </div>\n            <div className=\"appsContainer\">\n            <div className=\"button\">\n              <IconButton aria-label=\"open drawer\">\n                <AppsRoundedIcon />\n              </IconButton>\n            </div>\n            </div>\n          </Toolbar>    \n          </AppBar> \n          <Sidebar drawerOpenClose={open} />   \n        </div>\n      )\n}","C:\\Users\\Tushar\\Desktop\\Bridgelabz\\React JS codes\\fundoo-notes\\src\\components\\DisplayNotes\\DisplayNote.jsx",["127"],"C:\\Users\\Tushar\\Desktop\\Bridgelabz\\React JS codes\\fundoo-notes\\src\\components\\DisplayIcons\\DisplayIcons.jsx",["128","129","130","131","132","133","134","135"],"C:\\Users\\Tushar\\Desktop\\Bridgelabz\\React JS codes\\fundoo-notes\\src\\components\\SideBar\\SideBar.jsx",["136","137","138"],"import React , {  } from 'react';\nimport \"./SideBar.css\";\nimport Drawer from '@material-ui/core/Drawer';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { List, ListItem, ListItemIcon, ListItemText } from '@material-ui/core/';\nimport EmojiObjectsOutlinedIcon from '@material-ui/icons/EmojiObjectsOutlined';\nimport NotificationsNoneOutlinedIcon from '@material-ui/icons/NotificationsNoneOutlined';\nimport CreateOutlinedIcon from '@material-ui/icons/CreateOutlined';\nimport ArchiveOutlinedIcon from '@material-ui/icons/ArchiveOutlined';\nimport DeleteOutlinedIcon from '@material-ui/icons/DeleteOutlined';\n\n\nconst drawerWidth = 300;\nconst useStyles = makeStyles((theme) => ({\n    menuButton: {\n        marginRight: 36,\n    },\n\n    root: {\n        display: 'flex',\n        height: 3,\n    },\n\n    menuButton: {\n        marginRight: theme.spacing(2),\n    },\n\n    drawer: {\n        width: drawerWidth,\n        flexShrink: 0,\n    },\n    drawerPaper: {\n        width: drawerWidth,\n        top: 62,\n    },\n    header: {\n        width: 200,\n    },\n\n    appBar: {\n        width: 500,\n    },\n    \n    drawerOpen: {\n        width: drawerWidth,\n        transition: theme.transitions.create('width', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    drawerClose: {\n        transition: theme.transitions.create('width', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        overflowX: 'hidden',\n        width: theme.spacing(7) + 1,\n        [theme.breakpoints.up('sm')]: {\n            width: theme.spacing(9) + 1,\n        },\n    },\n\n    content: {\n\n        transition: theme.transitions.create('margin', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        marginLeft: -drawerWidth,\n    },\n    contentShift: {\n        transition: theme.transitions.create('margin', {\n            easing: theme.transitions.easing.easeOut,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n        marginLeft: 0,\n    },\n\n    \n}))\n\nfunction SidebarNavigator(props) {\n    const classes = useStyles();\n    const [] = React.useState(false);\n     return(\n        <div className={classes.root}>\n            <Drawer open={props.drawerOpenClose}\n                variant=\"persistent\"\n                anchor=\"left\"\n                classes={{\n                    paper: classes.drawerPaper,\n                }}\n                anchor=\"left\">\n                <List>\n                  <div className=\"notes\">\n                     <ListItem>\n                        <ListItemIcon>\n                           <EmojiObjectsOutlinedIcon className=\"Notes\" >\n                           </EmojiObjectsOutlinedIcon>    \n                        </ListItemIcon>\n                        <ListItemText primary='Notes'/>\n                     </ListItem>\n                 </div>\n                 <div className=\"reminder\">\n                    <ListItem>\n                        <ListItemIcon>  \n                            <NotificationsNoneOutlinedIcon className=\"Reminder\">\n                            </NotificationsNoneOutlinedIcon>\n                        </ListItemIcon>\n                       <ListItemText primary='Reminders'/>\n                    </ListItem>             \n                 </div>\n                 <div className=\"Edit-label\">\n                        <ListItem >\n                            <ListItemIcon>\n                                <CreateOutlinedIcon className=\"Edit Labels\">\n                                </CreateOutlinedIcon>\n                            </ListItemIcon>\n                            <ListItemText primary='Edit labels' />\n                        </ListItem>\n                 </div>\n                 <div className=\"archive\">\n                        <ListItem >\n                            <ListItemIcon>\n                                <ArchiveOutlinedIcon className=\"Archive\">\n                                </ArchiveOutlinedIcon>\n                            </ListItemIcon>\n                            <ListItemText primary='Archive' />\n                        </ListItem>\n                 </div>\n                 <div className=\"bin\">\n                        <ListItem  >\n                            <ListItemIcon>\n                                <DeleteOutlinedIcon className=\"Trash\">\n                                </DeleteOutlinedIcon>\n                            </ListItemIcon>\n                            <ListItemText primary='Trash' />\n                        </ListItem>\n                 </div>\n                </List>\n            </Drawer>\n                \n        </div>\n    )\n\n}\n\nexport default SidebarNavigator;","C:\\Users\\Tushar\\Desktop\\Bridgelabz\\React JS codes\\fundoo-notes\\src\\components\\Notes\\notes.jsx",["139"],"import React from 'react'\r\nimport AddNote from '../addNote/addNote'\r\nimport DisplayNote from '../DisplayNotes/DisplayNote'\r\nimport { getNotes } from '../../Services/userServices'\r\n\r\nexport default function Notes(props){\r\n    \r\n    var [note, setNote] = React.useState([]);\r\n    \r\n    React.useEffect(()=>{\r\n        displaynotes();\r\n    }, []);\r\n\r\n    const displaynotes = () => {\r\n        getNotes().then(data=>{\r\n            console.log('data in notes : ',data.data.data)\r\n            setNote(data.data.data)\r\n            console.log('note : ',note);\r\n        }).catch(err=>{\r\n            console.log('err : ',err);\r\n        })\r\n    }\r\n\r\n    return(\r\n        <div className=\"mainContent\">\r\n          <AddNote getNoteUpdate={displaynotes} /> \r\n          <DisplayNote notes={note} />   \r\n        </div>\r\n    )\r\n}","C:\\Users\\Tushar\\Desktop\\Bridgelabz\\React JS codes\\fundoo-notes\\src\\components\\TrashNotes\\trashnote.jsx",["140","141","142","143","144","145","146","147"],"import React from 'react'\r\nimport '../TrashNotes/trashnote.css'\r\nimport AddNote from '../addNote/addNote'\r\nimport DisplayNote from '../DisplayNotes/DisplayNote'\r\nimport DisplayIcons from '../DisplayIcons/DisplayIcons'\r\nimport { Typography } from '@material-ui/core'\r\nimport DeleteForeverRoundedIcon from '@material-ui/icons/DeleteForeverRounded';\r\nimport RestoreFromTrashRoundedIcon from '@material-ui/icons/RestoreFromTrashRounded';\r\nimport { getTrashNotes, deleteforever, deleteNotes  } from '../../Services/userServices'\r\n\r\n\r\nexport default function Notes(props) {\r\n    const [trash, settrash] = React.useState([]);\r\n    const [noteId, setNoteId] = React.useState();\r\n    const [notedata, setnotedata] = React.useState();\r\n\r\n    React.useEffect(()=>{\r\n        displaynotes();\r\n    }, []);\r\n\r\n    const displaynotes = () => {\r\n        getTrashNotes().then((data)=>{\r\n            settrash(data.data.data);\r\n            console.log(trash)\r\n        }).catch(err=>{\r\n            console.log('err : ',err)\r\n        })\r\n    }\r\n\r\n    const deleteforever = (e, nId) => {\r\n        console.log('nId : ',nId)\r\n        let data = {\r\n            deleteNote_ID: [nId],\r\n        }\r\n\r\n        deleteforever(data).then(data=>{\r\n            console.log('Note Successfully deleted : ',data)\r\n            displaynotes();\r\n            props.getall();\r\n        }).catch(err=>{\r\n            console.log('Error failed to delete the note',err)\r\n        })\r\n    }\r\n\r\n\r\n    const restore = (e,nId) => {\r\n        let data = {\r\n            moveToTrashNote_ID: [nId],\r\n            isTrash: false,\r\n        }\r\n\r\n        console.log('data in restore : ', data)\r\n        deleteNotes(data).then(data=>{\r\n            console.log('data : ', data)\r\n            displaynotes();\r\n            props.getall();\r\n        }).catch(err=>{\r\n            console.log('err : ',err)\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className=\"mainContent\">\r\n            {trash.map((data) => (\r\n                <div className=\"notes\" style={{ backgroundColor: data.color }}>\r\n                    <div>\r\n                        <Typography className=\"title\">{data.title}</Typography>\r\n                        <Typography className=\"description\">{data.description}</Typography>\r\n                    </div>\r\n                    <div className=\"display\">\r\n                        <div>\r\n                            <DisplayNote notes={trash} />\r\n                        </div>\r\n                    </div>\r\n                    <div>\r\n                        <DeleteForeverRoundedIcon onClick={(e) => { deleteforever(e, data.id) }} />\r\n                        <RestoreFromTrashRoundedIcon onClick={(e) => { restore(e, data.id) }} />\r\n                    </div>\r\n                </div>\r\n            ))}\r\n        </div>\r\n    )\r\n}",["148","149"],{"ruleId":"150","replacedBy":"151"},{"ruleId":"152","replacedBy":"153"},{"ruleId":"154","severity":1,"message":"155","line":6,"column":9,"nodeType":"156","messageId":"157","endLine":6,"endColumn":18},{"ruleId":"158","severity":1,"message":"159","line":93,"column":54,"nodeType":"160","messageId":"161","endLine":93,"endColumn":55,"suggestions":"162"},{"ruleId":"158","severity":1,"message":"159","line":93,"column":70,"nodeType":"160","messageId":"161","endLine":93,"endColumn":71,"suggestions":"163"},{"ruleId":"164","severity":1,"message":"165","line":343,"column":33,"nodeType":"166","endLine":343,"endColumn":44},{"ruleId":"164","severity":1,"message":"165","line":344,"column":33,"nodeType":"166","endLine":344,"endColumn":85},{"ruleId":"158","severity":1,"message":"159","line":42,"column":54,"nodeType":"160","messageId":"161","endLine":42,"endColumn":55,"suggestions":"167"},{"ruleId":"158","severity":1,"message":"159","line":42,"column":70,"nodeType":"160","messageId":"161","endLine":42,"endColumn":71,"suggestions":"168"},{"ruleId":"169","severity":1,"message":"170","line":65,"column":46,"nodeType":"171","messageId":"172","endLine":65,"endColumn":48},{"ruleId":"173","severity":1,"message":"174","line":68,"column":13,"nodeType":"175","messageId":"172","endLine":68,"endColumn":22},{"ruleId":"154","severity":1,"message":"176","line":70,"column":11,"nodeType":"156","messageId":"157","endLine":70,"endColumn":22},{"ruleId":"154","severity":1,"message":"177","line":8,"column":8,"nodeType":"156","messageId":"157","endLine":8,"endColumn":11},{"ruleId":"169","severity":1,"message":"170","line":43,"column":33,"nodeType":"171","messageId":"172","endLine":43,"endColumn":35},{"ruleId":"169","severity":1,"message":"170","line":53,"column":36,"nodeType":"171","messageId":"172","endLine":53,"endColumn":38},{"ruleId":"164","severity":1,"message":"165","line":197,"column":52,"nodeType":"166","endLine":197,"endColumn":59},{"ruleId":"164","severity":1,"message":"165","line":197,"column":120,"nodeType":"166","endLine":197,"endColumn":143},{"ruleId":"169","severity":1,"message":"170","line":50,"column":37,"nodeType":"171","messageId":"172","endLine":50,"endColumn":39},{"ruleId":"169","severity":1,"message":"178","line":57,"column":30,"nodeType":"171","messageId":"172","endLine":57,"endColumn":32},{"ruleId":"154","severity":1,"message":"179","line":1,"column":17,"nodeType":"156","messageId":"157","endLine":1,"endColumn":25},{"ruleId":"154","severity":1,"message":"180","line":1,"column":27,"nodeType":"156","messageId":"157","endLine":1,"endColumn":36},{"ruleId":"154","severity":1,"message":"181","line":4,"column":8,"nodeType":"156","messageId":"157","endLine":4,"endColumn":15},{"ruleId":"154","severity":1,"message":"182","line":5,"column":8,"nodeType":"156","messageId":"157","endLine":5,"endColumn":19},{"ruleId":"154","severity":1,"message":"183","line":2,"column":8,"nodeType":"156","messageId":"157","endLine":2,"endColumn":13},{"ruleId":"154","severity":1,"message":"184","line":3,"column":10,"nodeType":"156","messageId":"157","endLine":3,"endColumn":19},{"ruleId":"154","severity":1,"message":"185","line":4,"column":7,"nodeType":"156","messageId":"157","endLine":4,"endColumn":14},{"ruleId":"154","severity":1,"message":"179","line":1,"column":17,"nodeType":"156","messageId":"157","endLine":1,"endColumn":25},{"ruleId":"154","severity":1,"message":"186","line":1,"column":27,"nodeType":"156","messageId":"157","endLine":1,"endColumn":37},{"ruleId":"154","severity":1,"message":"187","line":3,"column":10,"nodeType":"156","messageId":"157","endLine":3,"endColumn":20},{"ruleId":"154","severity":1,"message":"188","line":18,"column":10,"nodeType":"156","messageId":"157","endLine":18,"endColumn":19},{"ruleId":"154","severity":1,"message":"189","line":19,"column":10,"nodeType":"156","messageId":"157","endLine":19,"endColumn":14},{"ruleId":"154","severity":1,"message":"190","line":19,"column":16,"nodeType":"156","messageId":"157","endLine":19,"endColumn":23},{"ruleId":"154","severity":1,"message":"191","line":20,"column":18,"nodeType":"156","messageId":"157","endLine":20,"endColumn":27},{"ruleId":"154","severity":1,"message":"192","line":23,"column":17,"nodeType":"156","messageId":"157","endLine":23,"endColumn":25},{"ruleId":"154","severity":1,"message":"193","line":24,"column":10,"nodeType":"156","messageId":"157","endLine":24,"endColumn":13},{"ruleId":"154","severity":1,"message":"194","line":24,"column":15,"nodeType":"156","messageId":"157","endLine":24,"endColumn":21},{"ruleId":"169","severity":1,"message":"170","line":29,"column":17,"nodeType":"171","messageId":"172","endLine":29,"endColumn":19},{"ruleId":"169","severity":1,"message":"170","line":29,"column":45,"nodeType":"171","messageId":"172","endLine":29,"endColumn":47},{"ruleId":"169","severity":1,"message":"170","line":66,"column":21,"nodeType":"171","messageId":"172","endLine":66,"endColumn":23},{"ruleId":"169","severity":1,"message":"170","line":69,"column":28,"nodeType":"171","messageId":"172","endLine":69,"endColumn":30},{"ruleId":"169","severity":1,"message":"170","line":87,"column":19,"nodeType":"171","messageId":"172","endLine":87,"endColumn":21},{"ruleId":"169","severity":1,"message":"170","line":90,"column":26,"nodeType":"171","messageId":"172","endLine":90,"endColumn":28},{"ruleId":"195","severity":1,"message":"196","line":112,"column":17,"nodeType":"197","endLine":112,"endColumn":73},{"ruleId":"154","severity":1,"message":"179","line":1,"column":17,"nodeType":"156","messageId":"157","endLine":1,"endColumn":25},{"ruleId":"169","severity":1,"message":"170","line":22,"column":23,"nodeType":"171","messageId":"172","endLine":22,"endColumn":25},{"ruleId":"169","severity":1,"message":"170","line":25,"column":30,"nodeType":"171","messageId":"172","endLine":25,"endColumn":32},{"ruleId":"195","severity":1,"message":"196","line":48,"column":15,"nodeType":"197","endLine":48,"endColumn":56},{"ruleId":"154","severity":1,"message":"179","line":1,"column":17,"nodeType":"156","messageId":"157","endLine":1,"endColumn":25},{"ruleId":"154","severity":1,"message":"179","line":1,"column":17,"nodeType":"156","messageId":"157","endLine":1,"endColumn":25},{"ruleId":"154","severity":1,"message":"180","line":1,"column":27,"nodeType":"156","messageId":"157","endLine":1,"endColumn":36},{"ruleId":"154","severity":1,"message":"187","line":10,"column":10,"nodeType":"156","messageId":"157","endLine":10,"endColumn":20},{"ruleId":"154","severity":1,"message":"198","line":17,"column":12,"nodeType":"156","messageId":"157","endLine":17,"endColumn":20},{"ruleId":"154","severity":1,"message":"199","line":17,"column":22,"nodeType":"156","messageId":"157","endLine":17,"endColumn":33},{"ruleId":"154","severity":1,"message":"191","line":19,"column":20,"nodeType":"156","messageId":"157","endLine":19,"endColumn":29},{"ruleId":"154","severity":1,"message":"200","line":20,"column":12,"nodeType":"156","messageId":"157","endLine":20,"endColumn":16},{"ruleId":"154","severity":1,"message":"201","line":20,"column":18,"nodeType":"156","messageId":"157","endLine":20,"endColumn":25},{"ruleId":"173","severity":1,"message":"202","line":24,"column":5,"nodeType":"175","messageId":"172","endLine":24,"endColumn":15},{"ruleId":"203","severity":1,"message":"204","line":84,"column":11,"nodeType":"205","messageId":"172","endLine":84,"endColumn":13},{"ruleId":"164","severity":1,"message":"165","line":93,"column":17,"nodeType":"166","endLine":93,"endColumn":30},{"ruleId":"206","severity":1,"message":"207","line":12,"column":8,"nodeType":"208","endLine":12,"endColumn":10,"suggestions":"209"},{"ruleId":"154","severity":1,"message":"181","line":3,"column":8,"nodeType":"156","messageId":"157","endLine":3,"endColumn":15},{"ruleId":"154","severity":1,"message":"210","line":5,"column":8,"nodeType":"156","messageId":"157","endLine":5,"endColumn":20},{"ruleId":"154","severity":1,"message":"211","line":9,"column":25,"nodeType":"156","messageId":"157","endLine":9,"endColumn":38},{"ruleId":"154","severity":1,"message":"212","line":14,"column":12,"nodeType":"156","messageId":"157","endLine":14,"endColumn":18},{"ruleId":"154","severity":1,"message":"191","line":14,"column":20,"nodeType":"156","messageId":"157","endLine":14,"endColumn":29},{"ruleId":"154","severity":1,"message":"213","line":15,"column":12,"nodeType":"156","messageId":"157","endLine":15,"endColumn":20},{"ruleId":"154","severity":1,"message":"214","line":15,"column":22,"nodeType":"156","messageId":"157","endLine":15,"endColumn":33},{"ruleId":"206","severity":1,"message":"207","line":19,"column":8,"nodeType":"208","endLine":19,"endColumn":10,"suggestions":"215"},{"ruleId":"150","replacedBy":"216"},{"ruleId":"152","replacedBy":"217"},"no-native-reassign",["218"],"no-negated-in-lhs",["219"],"no-unused-vars","'DashBoard' is defined but never used.","Identifier","unusedVar","no-useless-escape","Unnecessary escape character: \\..","Literal","unnecessaryEscape",["220","221"],["222","223"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute",["224","225"],["226","227"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-dupe-keys","Duplicate key 'forgetMsg'.","ObjectExpression","'formIsValid' is assigned a value but never used.","'Box' is defined but never used.","Expected '!==' and instead saw '!='.","'useState' is defined but never used.","'useEffect' is defined but never used.","'AddNote' is defined but never used.","'DisplayNote' is defined but never used.","'React' is defined but never used.","'Component' is defined but never used.","'baseUrl' is assigned a value but never used.","'useContext' is defined but never used.","'makeStyles' is defined but never used.","'showTitle' is assigned a value but never used.","'edit' is assigned a value but never used.","'setEdit' is assigned a value but never used.","'setNoteId' is assigned a value but never used.","'setTrash' is assigned a value but never used.","'clr' is assigned a value but never used.","'setClr' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'anchorE1' is assigned a value but never used.","'setAnchorE1' is assigned a value but never used.","'open' is assigned a value but never used.","'setOpen' is assigned a value but never used.","Duplicate key 'menuButton'.","no-empty-pattern","Unexpected empty array pattern.","ArrayPattern","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'displaynotes'. Either include it or remove the dependency array.","ArrayExpression",["228"],"'DisplayIcons' is defined but never used.","'deleteforever' is defined but never used.","'noteId' is assigned a value but never used.","'notedata' is assigned a value but never used.","'setnotedata' is assigned a value but never used.",["229"],["218"],["219"],"no-global-assign","no-unsafe-negation",{"messageId":"230","fix":"231","desc":"232"},{"messageId":"233","fix":"234","desc":"235"},{"messageId":"230","fix":"236","desc":"232"},{"messageId":"233","fix":"237","desc":"235"},{"messageId":"230","fix":"238","desc":"232"},{"messageId":"233","fix":"239","desc":"235"},{"messageId":"230","fix":"240","desc":"232"},{"messageId":"233","fix":"241","desc":"235"},{"desc":"242","fix":"243"},{"desc":"242","fix":"244"},"removeEscape",{"range":"245","text":"246"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"247","text":"248"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"249","text":"246"},{"range":"250","text":"248"},{"range":"251","text":"246"},{"range":"252","text":"248"},{"range":"253","text":"246"},{"range":"254","text":"248"},"Update the dependencies array to be: [displaynotes]",{"range":"255","text":"256"},{"range":"257","text":"256"},[2644,2645],"",[2644,2644],"\\",[2660,2661],[2660,2660],[1195,1196],[1195,1195],[1211,1212],[1211,1211],[339,341],"[displaynotes]",[787,789]]